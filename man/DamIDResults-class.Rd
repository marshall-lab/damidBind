% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllClasses.R, R/plot_methods.R
\docType{class}
\name{DamIDResults}
\alias{DamIDResults}
\alias{show,DamIDResults-method}
\alias{analysisTable}
\alias{analysisTable,DamIDResults-method}
\alias{enrichedCond1}
\alias{enrichedCond1,DamIDResults-method}
\alias{enrichedCond2}
\alias{enrichedCond2,DamIDResults-method}
\alias{conditionNames}
\alias{conditionNames,DamIDResults-method}
\alias{plot,DamIDResults,missing-method}
\title{The DamIDResults Class}
\usage{
\S4method{show}{DamIDResults}(object)

analysisTable(object)

\S4method{analysisTable}{DamIDResults}(object)

enrichedCond1(object)

\S4method{enrichedCond1}{DamIDResults}(object)

enrichedCond2(object)

\S4method{enrichedCond2}{DamIDResults}(object)

conditionNames(object)

\S4method{conditionNames}{DamIDResults}(object)

\S4method{plot}{DamIDResults,missing}(x, y, ...)
}
\arguments{
\item{object}{A `DamIDResults` object.}

\item{x}{A `DamIDResults` object.}

\item{y}{(Missing) Not used.}

\item{...}{Additional arguments passed to `plot_volcano()`.}
}
\value{
\itemize{
  \item `analysisTable(object)`: returns a data.frame with the full differential analysis.
  \item `enrichedCond1(object)`: returns a data.frame of regions enriched in condition 1.
  \item `enrichedCond2(object)`: returns a data.frame of regions enriched in condition 2.
  \item `conditionNames(object)`: returns a named character vector mapping display names to internal condition identifiers.
}
}
\description{
An S4 class to store the results of a damidBind differential analysis,
as generated by `differential_binding()` or `differential_accessibility()`.

A generic plot method that creates a default visualisation (a volcano plot)
for a `DamIDResults` object. For more advanced plotting options or different
plot types, see the specific functions `plot_volcano()`, `plot_venn()`, and
`analyse_go_terms()`.
}
\section{Slots}{

\describe{
\item{\code{analysis}}{A data.frame containing the full differential analysis table from
limma or NOISeq.}

\item{\code{upCond1}}{A data.frame of regions significantly enriched in condition 1.}

\item{\code{upCond2}}{A data.frame of regions significantly enriched in condition 2.}

\item{\code{cond}}{A named character vector mapping user-friendly display names to the
internal condition identifiers used in the analysis.}

\item{\code{data}}{A list containing the initial input data used for the analysis,
including the occupancy data.frame and other metadata.}
}}

\section{Accessor Functions}{

These functions provide a convenient way to access the different data slots
of a `DamIDResults` object.
}

\examples{
# Helper function to create a sample DamIDResults object for examples
.generate_accessor_example_results <- function() {
    analysis_df <- data.frame(
        logFC = c(2, -2), P.Value = c(0.01, 0.01),
        row.names = c("chr1:1-100", "chr1:101-200")
    )
    new("DamIDResults",
        analysis = analysis_df,
        upCond1 = analysis_df[1, , drop = FALSE],
        upCond2 = analysis_df[2, , drop = FALSE],
        cond = c("Condition 1" = "C1", "Condition 2" = "C2"),
        data = list(test_category = "bound")
    )
}
dummy_results <- .generate_accessor_example_results()

# Extract the full analysis table
head(analysisTable(dummy_results))

# Extract regions enriched in condition 1
head(enrichedCond1(dummy_results))

# Extract regions enriched in condition 2
head(enrichedCond2(dummy_results))

# Get the condition names
conditionNames(dummy_results)
}
\seealso{
[plot_volcano()], [plot_venn()], [analyse_go_terms()] for more
powerful and specific plotting functions.
}
