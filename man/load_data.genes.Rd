% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_dataframes.R
\name{load_data.genes}
\alias{load_data.genes}
\title{Load genome-wide binding data for gene expression (RNA polymerase occupancy)}
\usage{
load_data.genes(
  binding_profiles_path = NULL,
  binding_profiles = NULL,
  quantile_norm = FALSE,
  organism = "drosophila melanogaster",
  ensdb_genes = NULL,
  BPPARAM = BiocParallel::bpparam()
)
}
\arguments{
\item{binding_profiles_path}{Character vector of directories or file globs
containing log2 ratio binding tracks in bedGraph format. Wildcards ('*') supported.}

\item{binding_profiles}{Named list of GRanges objects representing binding profiles.}

\item{quantile_norm}{Logical (default: FALSE) quantile-normalise across all signal columns if TRUE.}

\item{organism}{Organism string (lower case) to obtain genome annotation from (if not providing a custom `ensdb_genes` object)
Defautls to "drosophila melanogaster".}

\item{ensdb_genes}{GRanges object: gene annotation. Automatically obtained from `organism` if NULL.}

\item{BPPARAM}{BiocParallel function (defaults to BiocParallel::bpparam())}
}
\value{
List with elements:
  \item{binding_profiles_data}{data.frame of merged binding profiles, with chr, start, end, sample columns.}
  \item{occupancy}{data.frame of occupancy values summarised over genes.}
  \item{test_category}{Character scalar; will be "expressed".}
}
\description{
Reads RNA Polymerase DamID binding profiles either from bedGraph files or
directly from a named list of GRanges objects. Calculates binding occupancy
summarised over genes.
}
\details{
One of `binding_profiles_path` or `binding_profiles` must be provided.

When supplying GRanges lists, each GRanges should contain exactly one numeric
metadata column representing the signal, and `binding_profiles` must be a
named list, with element names used as sample names.
}
\examples{
\dontrun{
# Using file paths:
res <- load_data.genes(
  binding_profiles_path = "data/rnapol/",
  organism = "drosophila melanogaster")

# Using GRanges list:
res <- load_data.genes(
  binding_profiles = list(
    cond1_n1 = gr1,
    cond1_n2 = gr2,
    cond2_n1 = gr3,
    cond2_n2 = gr4),
  organism = "drosophila melanogaster")
}

}
